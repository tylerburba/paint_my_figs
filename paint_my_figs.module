<?php

use Drupal\Component\Utility\SafeMarkup;

/**
 * Implements hook_mail for quote_module
 */

function quote_module_mail($key, $message, $params) {
    $options = array(
        'langcode' => $message['langcode'],
    );
    switch($key) {
        case 'new quote':
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('New quote request: @title', array('@title' => $params['title']), $options);
            $message['body'][] = SafeMarkup::checkPlain($params['message']);
            break;
        case 'new commission':
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('New commission: @title', array('@title' => $params['title']), $options);
            $message['body'][] = SafeMarkup::checkPlain($params['message']);
            break;
        case 'updated quote':
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('Updated quote: @title', array('@title' => $params['title']), $options);
            $message['body'][] = SafeMarkup::checkPlain($params['message']);
            break;
        case 'updated commission':
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('Updated commission: @title', array('@title' => $params['title']), $options);
            $message['body'][] = SafeMarkup::checkPlain($params['message']);
            break;

    }
}

/**
 * Implements hook_entity_update().
 */

/**
 * Implements hook_entity_update().
 */
function quote_module_entity_update(Drupal\Core\Entity\EntityInterface $entity)
{
    if($entity->getEntityTypeId() == 'quote_entity') {
        $mailManager = \Drupal::service('plugin.manager.mail');

        $module = 'quote_module';
        $key = 'updated quote';
        $to = \Drupal::currentUser()->getEmail(); //change to painter

        $params['message'] = 'You have a new quote request. Please log in and review it';
        $params['title'] = $entity->getName();
        $langcode = \Drupal::currentUser()->getPreferredLangcode();
        $send = true;

        $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
        if($result['result'] !== true) {
            $message = t('There was a problem sending your email notification to @email for updating quote @id.', array('@email' => $to, '@id' => $entity->id()));
            drupal_set_message($message, 'error');
            \Drupal::logger('quote_module')->error($message);
            return;
        }

        $message = t('An email notification has been sent to @email for updating commission @id', array('@email' => $to, '@id' => $entity->id()));
        drupal_set_message($message);
        \Drupal::logger('quote_module')->notice($message);
    }
    elseif($entity->getEntityTypeId() == 'commission_entity') {
        $mailManager = \Drupal::service('plugin.manager.mail');

        $module = 'quote_module';
        $key = 'updated commission';
        $to = \Drupal::currentUser()->getEmail(); //change to painter
        $params['message'] = 'You have a new commission. Please log in and review it';
        $params['title'] = $entity->getName();
        $langcode = \Drupal::currentUser()->getPreferredLangcode();
        $send = true;

        $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
        if($result['result'] !== true) {
            $message = t('There was a problem sending your email notification to @email for updating commission @id.', array('@email' => $to, '@id' => $entity->id()));
            drupal_set_message($message, 'error');
            \Drupal::logger('quote_module')->error($message);
            return;
        }

        $message = t('An email notification has been sent to @email for updating commission @id', array('@email' => $to, '@id' => $entity->id()));
        drupal_set_message($message);
        \Drupal::logger('quote_module')->notice($message);
    }
}

/**
 * Implements hook_entity_insert().
 */

function quote_module_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {
    if($entity->getEntityTypeId() == 'quote_entity') {
        $mailManager = \Drupal::service('plugin.manager.mail');

        $module = 'quote_module';
        $key = 'new quote';
        $to = \Drupal::currentUser()->getEmail(); //change to painter
        $params['message'] = 'You have a new quote request. Please log in and review it';
        $params['title'] = $entity->getName();
        $langcode = \Drupal::currentUser()->getPreferredLangcode();
        $send = true;

        $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
        if($result['result'] !== true) {
            $message = t('There was a problem sending your email notification to @email for creating quote @id.', array('@email' => $to, '@id' => $entity->id()));
            drupal_set_message($message, 'error');
            \Drupal::logger('quote_module')->error($message);
            return;
        }

        $message = t('An email notification has been sent to @email for creating commission @id', array('@email' => $to, '@id' => $entity->id()));
        drupal_set_message($message);
        \Drupal::logger('quote_module')->notice($message);
    }
    elseif($entity->getEntityTypeId() == 'commission_entity') {
        $mailManager = \Drupal::service('plugin.manager.mail');

        $module = 'quote_module';
        $key = 'new commission';
        $to = \Drupal::currentUser()->getEmail(); //change to painter
        $params['message'] = 'You have a new commission. Please log in and review it';
        $params['title'] = $entity->getName();
        $langcode = \Drupal::currentUser()->getPreferredLangcode();
        $send = true;

        $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
        if($result['result'] !== true) {
            $message = t('There was a problem sending your email notification to @email for creating commission @id.', array('@email' => $to, '@id' => $entity->id()));
            drupal_set_message($message, 'error');
            \Drupal::logger('quote_module')->error($message);
            return;
        }

        $message = t('An email notification has been sent to @email for creating commission @id', array('@email' => $to, '@id' => $entity->id()));
        drupal_set_message($message);
        \Drupal::logger('quote_module')->notice($message);
    }
}